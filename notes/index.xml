<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Notes on Nihal Jain</title>
    <link>https://nihaljn.github.io/notes/</link>
    <description>Recent content in Notes on Nihal Jain</description>
    <generator>Hugo -- 0.145.0</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 15 Apr 2025 20:08:56 -0400</lastBuildDate>
    <atom:link href="https://nihaljn.github.io/notes/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>matplotlib rcParams</title>
      <link>https://nihaljn.github.io/notes/matplotlib-rcparams/</link>
      <pubDate>Tue, 15 Apr 2025 20:08:56 -0400</pubDate>
      <guid>https://nihaljn.github.io/notes/matplotlib-rcparams/</guid>
      <description>&lt;p&gt;I like to make my &lt;code&gt;matplotlib&lt;/code&gt; plots aesthetically pleasing. For each new project, I end up creating a fresh &amp;ldquo;aesthetic setup&amp;rdquo; for my plots; this causes inconsistencies across my visualizations and unnecessary overhead.&lt;/p&gt;
&lt;p&gt;So, I decided to swallow the bitter pill, and learn about customizing &lt;code&gt;matplotlib&lt;/code&gt; the proper way. Thankfully, there is a neat &lt;a href=&#34;https://matplotlib.org/stable/users/explain/customizing.html&#34;&gt;blog&lt;/a&gt; explaining this. The recommendation appears to be overriding a dict-like variable &lt;code&gt;matplotlib.rcParams&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;I will use this space to log my most current &lt;code&gt;rcParams&lt;/code&gt; overrides and some rationale behind the design where needed. I expect this to evolve over time, and I will try my best to log details when making changes.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Weak Programming Patterns</title>
      <link>https://nihaljn.github.io/notes/weak-programming-patterns/</link>
      <pubDate>Sat, 29 Mar 2025 00:36:55 -0400</pubDate>
      <guid>https://nihaljn.github.io/notes/weak-programming-patterns/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;When I see patterns in my programs, I consider it a sign of trouble. The shape of a program should reflect only the problem it needs to solve. Any other regularity in the code is a sign, to me at least, that I&amp;rsquo;m using abstractions that aren&amp;rsquo;t powerful enough&amp;ndash; often that I&amp;rsquo;m generating by hand the expansions of some macro that I need to write.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;From &amp;ldquo;Revenge of the Nerds&amp;rdquo; by Paul Graham [&lt;a href=&#34;https://www.paulgraham.com/icad.html&#34;&gt;Link&lt;/a&gt;].&lt;/p&gt;</description>
    </item>
    <item>
      <title>Hardlinks and Softlinks</title>
      <link>https://nihaljn.github.io/notes/hardlinks-and-softlinks/</link>
      <pubDate>Fri, 28 Mar 2025 21:55:14 -0400</pubDate>
      <guid>https://nihaljn.github.io/notes/hardlinks-and-softlinks/</guid>
      <description>&lt;p&gt;A hardlink is a file pointing to the same disk location as another file. On the other hand, a softlink (or symlink) is a file containing the path to another target file. Represented diagramatically:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;File      Target
F1    -&amp;gt;    D1
F2    -&amp;gt;    D1
F3    -&amp;gt;    F4
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Here, &lt;code&gt;F2&lt;/code&gt; is a hardlink to &lt;code&gt;D1&lt;/code&gt; whereas &lt;code&gt;F3&lt;/code&gt; is a symlink to &lt;code&gt;F4&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Symlinks are preferred when shortcuts or shorthand paths are needed to files or directories. A hardlink on the other hand acts as a &amp;ldquo;backup&amp;rdquo; copy without occupying more space (useful behavior for version control).&lt;/p&gt;</description>
    </item>
    <item>
      <title>Claude 3.7 Sonnet and Claude Code</title>
      <link>https://nihaljn.github.io/notes/claude-3.7-sonnet-and-claude-code/</link>
      <pubDate>Mon, 24 Mar 2025 23:50:04 -0400</pubDate>
      <guid>https://nihaljn.github.io/notes/claude-3.7-sonnet-and-claude-code/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://www.anthropic.com/news/claude-3-7-sonnet&#34;&gt;Link&lt;/a&gt;. Originally published: Feb 24, 2025.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;we’re announcing Claude 3.7 Sonnet1, our most intelligent model to date and the first hybrid reasoning model on the market.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;API users also have fine-grained control over &lt;em&gt;how long&lt;/em&gt; the model can think for&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;we’re also introducing a command line tool for agentic coding, Claude Code. Claude Code is available as a limited research preview, and enables developers to delegate substantial engineering tasks to Claude directly from their terminal.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
