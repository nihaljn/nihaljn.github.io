<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>computer-science-theory on Nihal Jain</title>
    <link>https://nihaljn.github.io/tags/computer-science-theory/</link>
    <description>Recent content in computer-science-theory on Nihal Jain</description>
    <generator>Hugo -- 0.150.0</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 01 Aug 2025 02:40:34 -0400</lastBuildDate>
    <atom:link href="https://nihaljn.github.io/tags/computer-science-theory/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Kolmogorov Complexity</title>
      <link>https://nihaljn.github.io/blog/kolmogorov-complexity/</link>
      <pubDate>Fri, 01 Aug 2025 02:40:34 -0400</pubDate>
      <guid>https://nihaljn.github.io/blog/kolmogorov-complexity/</guid>
      <description>&lt;p&gt;Kolmogorov Complexity ($K$) is a way of measuring how complex an object is. For string objects, it is formally defined as the length of the shortest program that generates the string.&lt;/p&gt;
&lt;p&gt;For e.g., consider two strings $s:=101010101010$ and $t:=001110101110$. It&amp;rsquo;s trivial to see how $s$ is less complex, and $K$ helps quantify this. The shortest (Python-style) programs generating these would be &lt;code&gt;print(&amp;quot;10&amp;quot;*6)&lt;/code&gt; and &lt;code&gt;print(&amp;quot;001110101110&amp;quot;)&lt;/code&gt; respectively, making $K(s) = 13$ and $K(t) = 21$.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
